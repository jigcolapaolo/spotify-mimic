---
import HomeIcon from "@/icons/Home.astro";
import SideMenuItem from "./SideMenuItem.astro";
import SideMenuCard from "./SideMenuCard.astro";

import { playlists } from "@/lib/data";
import { SearchBtn } from "@/components/SearchBtn";
import { AsideToggler } from "./AsideToggler";

---

<nav class="flex flex-col gap-2 flex-1 min-h-0 relative">
    <div class="bg-zinc-900 rounded-lg p-2">
        <ul class="flex flex-col items-start gap-2 cursor-pointer">
            <SideMenuItem href="/" id="home-item">
                <HomeIcon />
                <span id="home-text" class="truncate">Inicio</span>
            </SideMenuItem>
            <SearchBtn client:load transition:persist transition:name="search-input" />
        </ul>
    </div>
    <div class="bg-zinc-900 rounded-lg p-2 flex flex-col flex-1 min-h-0">
        <ul class="flex items-center gap-2 cursor-pointer">
            <AsideToggler client:load transition:persist transition:name="playlist-toggle" />
        </ul>
        <div class="flex-1 overflow-y-auto">
            {
                playlists.map(playlists => <SideMenuCard playlist={playlists} />)
            }
        </div>
    </div>
</nav>

<script>
  import tippy from "tippy.js";

    const app = document.getElementById("app") as HTMLDivElement;
    const homeItem = document.querySelector("#home-item") as HTMLLIElement;

    let tooltipInstance: any;

    const updateTooltip = () => {
    if (tooltipInstance) {
        tooltipInstance.destroy();
    }

    const content = app.style.gridTemplateColumns === "80px 1fr" ? "Inicio" : "";

    tooltipInstance = tippy(homeItem, {
        content,
        theme: "dark",
        placement: "right",
        delay: [500, 0],
    });
    };

    updateTooltip();

    const observer = new MutationObserver(updateTooltip);
    observer.observe(app, { attributes: true, attributeFilter: ["style"] });
</script>

<script is:inline>

    document.addEventListener("astro:page-load", () => {
        document.addEventListener("astro:after-swap", () => {
            const app = document.getElementById("app");
            const playlistToggleText = document.getElementById("playlist-toggle-text");
            const homeText = document.getElementById("home-text");
            const searchBtnText = document.getElementById("search-btn-text");


            if (playlistToggleText.classList.contains("hidden")) {
                homeText.classList.add("hidden");
                searchBtnText.classList.add("hidden");
                app.style.gridTemplateColumns = "80px 1fr";

            } else {
                homeText.classList.remove("hidden");
                searchBtnText.classList.remove("hidden");
                app.style.gridTemplateColumns = "300px 1fr";
            }
        })
    })

</script>

