---
import { TimeIcon } from "@/icons/MusicsTableIcons";
import { type Song } from "@/lib/data";
import { SongPlayButton } from "./SongPlayButton";
import { Title } from "./Title";

interface Props {
    songs: Song[];
}

const { songs } = Astro.props;
---

<div>
    <table class="table-auto text-left min-w-full divide-y divide-gray-500/50 hidden md:table">
        <thead>
            <tr class="text-zinc-400 text-sm font-light">
                <th class="px-4 py-2 font-light">#</th>
                <th class="px-4 py-2 font-light">Título</th>
                <th class="px-4 py-2 font-light">Álbum</th>
                <th class="px-4 py-2 font-light"><TimeIcon /></th>
            </tr>
        </thead>
        <tbody>
            <tr class="h-[16px]"></tr>
            {songs.map((song, index) => (
                <tr class="text-gray-300 rounded-lg text-sm font-light hover:bg-white/10 overflow-hidden
                 transition duration-300">
                    <td class="px-4 py-2 rounded-tl-lg rounded-bl-lg w-5 group relative">
                        <SongPlayButton albumId={song.albumId} songIndex={index} client:visible />
                    </td>
                    <td class="px-4 py-2 flex flex-col md:flex-row gap-3">
                        <picture class="" >
                            <img src={song.image} alt={`Cover of ${song.title}`} class="w-11 h-11" />
                        </picture>
                        <div 
                            class="flex flex-col"
                            style={{
                                overflow: "hidden",
                                overflowWrap: "break-word",
                            }}
                        >
                            <Title title={song.title} playlistId={song.albumId.toString()} songId={song.id} className="text-base font-normal" client:load/>
                            <span>{song.artists.join(", ")}</span>
                        </div>
                    </td>
                    <td class="px-4 py-2">{song.album}</td>
                    <td class="px-4 py-2 rounded-tr-lg rounded-br-lg">{song.duration}</td>
                </tr>
            ))}
        </tbody>
    </table>

    <div class="grid grid-cols-1 gap-4 md:hidden">
        {songs.map((song, index) => (
            <div class="flex gap-4 text-gray-300 rounded-lg text-sm font-light hover:bg-white/10 overflow-hidden
                 transition duration-300 py-2">
                <div class="px-4 py-2 rounded-tl-lg rounded-bl-lg w-5 group relative">
                    <SongPlayButton albumId={song.albumId} songIndex={index} client:visible /> 
                </div>

                <div 
                    class="flex flex-col flex-1"
                    style={{
                        overflow: "hidden",
                        overflowWrap: "break-word",
                    }}
                >
                    <Title title={song.title} playlistId={song.albumId.toString()} songId={song.id} className="text-sm font-normal" client:load/>
                    <span>{song.artists.join(", ")}</span>
                </div>

                <div class="flex items-center gap-2">
                    <span>{song.duration}</span><TimeIcon />
                </div>
            </div>
        ))}
    </div>

</div>