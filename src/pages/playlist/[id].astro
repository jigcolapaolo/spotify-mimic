---
import Layout from "@/layouts/Layout.astro";
import { allPlaylists, songs } from "@/lib/data";
import SongsTable from "@/components/SongsTable.astro";
import CardPlayButton from "@/components/CardPlayButton";
import { Title } from "@/components/Title";
import NavArrows from "@/components/NavArrows.astro";


const { id } = Astro.params

const playlist = allPlaylists.find(playlist => playlist.id === id)
const playlistSongs = songs.filter(song => song.albumId === playlist?.albumId)

const artistsString = playlist?.artists.join(", ")

const albumTotalSeconds = playlistSongs.reduce((acc, song) => {
    const songDuration = song.duration.split(":")
    return acc + ((Number(songDuration[0]) * 60) + Number(songDuration[1]))
}, 0)
const albumTotalMinutes = Math.floor(albumTotalSeconds / 60)
const albumTotalHours = Math.floor(albumTotalSeconds / 3600)

const accentColor = playlist?.color.accent
const darkColor = playlist?.color.dark
---

<Layout title="Spotify Mimic">
    <div 
        id="playlist-container"
        class="relative flex flex-col h-full overflow-x-hidden duration-1000 bg-zinc-900 rounded-md"

        transition:name=`playlist ${id} box`    
    >
        <NavArrows />

        <header class="flex flex-col sm:flex-row gap-8 px-6 mt-8">
            <picture class="aspect-square w-45 h-45 sm:w-52 sm:h-52 flex-none">
                <img
                    class="object-cover w-full h-full shadow-lg"
                    src={playlist?.cover}
                    alt={`Cover of ${playlist?.title}`}
                    transition:name=`playlist ${playlist?.id} image`
                />
            </picture>

            <div class="flex flex-col justify-between">
                <h2 class="flex flex-1 items-end">Playlist</h2>
                <div>
                    <div transition:name=`playlist ${id} title`>
                        <Title 
                            title={playlist?.title as string} 
                            className="playlist-id-title text-5xl font-bold block text-white"
                            client:load
                        />
                    </div>
                </div>

                <div class="flex-1 flex items-end">
                    <div class="text-sm text-gray-300 font-normal">
                        <div transition:name=`playlist ${playlist?.id} artists`>
                            <span class="text-white">{artistsString}</span>
                        </div>
                        <p class="mt-1">
                            <span class="text-white">
                                {playlistSongs.length > 1 ? `${playlistSongs.length} canciones` : `${playlistSongs.length } cancioÃÅn`}
                            </span>
                            , {albumTotalMinutes > 60 ? `${albumTotalHours} h` : `${albumTotalMinutes} min`} aprox.
                        </p>
                    </div>

                </div>
            </div>
        </header>
        <div class="pl-6 pt-6" transition:name={`playlist ${playlist?.id} button`}>
            <CardPlayButton id={id as string} size="large" client:load />
        </div>

        <div class="relative z-10 px-6 pt-10"></div>

        <section id="playlist-songs-section" class="p-6 px-3 md:px-6">
            <SongsTable songs={playlistSongs} />
        </section>
        <div class="background-gradient absolute inset-0 -z-10" />
    </div>
</Layout>

<style define:vars={{ accentColor, darkColor }}>
    .background-gradient {
        background: linear-gradient(to bottom, var(--accentColor), var(--darkColor), #18181b 85%);
    }
</style>
